name: CI

on:
  push:
  pull_request:
  schedule: [cron: "40 1 * * *"]

permissions:
  contents: read

env:
  RUSTFLAGS: -Dwarnings

jobs:
  test:
    name: Test suite
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo test --features weighted-generation
      - run: cargo test --features serde
      - run: cargo test --features miniserde
      - run: cargo test --features weighted-generation,serde
      - run: cargo test --features weighted-generation,miniserde
      - run: cargo test
      - run: cargo test --no-default-features

  windows:
    name: Test suite (windows)
    runs-on: windows-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo test --features weighted-generation
      - run: cargo test --features serde
      - run: cargo test --features miniserde
      - run: cargo test --features weighted-generation,serde
      - run: cargo test --features weighted-generation,miniserde
      - run: cargo test
      - run: cargo test --no-default-features

  stable:
    name: Rust ${{matrix.rust}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta]
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{matrix.rust}}
      - run: cargo test --features weighted-generation
      - run: cargo test --features serde
      - run: cargo test --features miniserde
      - run: cargo test --features weighted-generation,serde
      - run: cargo test --features weighted-generation,miniserde
      - run: cargo test
      - run: cargo test --no-default-features

  nightly:
    name: Rust nightly ${{matrix.os == 'windows' && '(windows)' || ''}}
    runs-on: ${{matrix.os}}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows]
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo test --features weighted-generation
      - run: cargo test --features serde
      - run: cargo test --features miniserde
      - run: cargo test --features weighted-generation,serde
      - run: cargo test --features weighted-generation,miniserde
      - run: cargo test
      - run: cargo test --no-default-features

  # msrv:
  #   name: Rust ${{matrix.rust}}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       rust: [1.65.0, 1.66.0, 1.67.0]
  #   timeout-minutes: 45
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: dtolnay/rust-toolchain@master
  #       with:
  #         toolchain: ${{matrix.rust}}
  #     - run: cargo build --features serialize
  #     - run: cargo test

  msrv_weighted_generation:
    name: Rust ${{matrix.rust}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [1.80.0, 1.81.0]
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{matrix.rust}}
      - run: cargo test --features weighted-generation
      - run: cargo test --features serde
      - run: cargo test --features miniserde
      - run: cargo test --features weighted-generation,serde
      - run: cargo test --features weighted-generation,miniserde
      - run: cargo test
      - run: cargo test --no-default-features

  # clippy:
  #   name: Clippy
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 45
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: dtolnay/rust-toolchain@clippy
  #     - run: cargo clippy --features weighted-generation -- -Dclippy::all -Dclippy::pedantic

  format:
      name: rustfmt-check
      runs-on: ubuntu-latest
      if: github.event_name == 'pull_request'
      steps:
          - uses: actions/checkout@v2
          - run: echo "date=$(date -d '1 month ago' +'%Y-%m-%d')" >> $GITHUB_ENV
          - uses: dtolnay/rust-toolchain@master
            with:
                toolchain: nightly-${{ env.date }}
                components: rustfmt
                working-directory: .
          - uses: LoliGothick/rustfmt-check@master
            with:
                token: ${{ secrets.GITHUB_TOKEN }}
                toolchain: nightly-${{ env.date }}
                flags: --all
                working-directory: .
